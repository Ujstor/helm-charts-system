toolbox:
  enabled: true

ingress:
  dashboard:
    {}
    # annotations:
    #   external-dns.alpha.kubernetes.io/hostname: dashboard.example.com
    #   nginx.ingress.kubernetes.io/rewrite-target: /ceph-dashboard/$2
    # If the dashboard has ssl: true the following will make sure the NGINX Ingress controller can expose the dashboard correctly
    #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #   nginx.ingress.kubernetes.io/server-snippet: |
    #     proxy_ssl_verify off;
    # host:
    #   name: dashboard.example.com
    #   path: "/ceph-dashboard(/|$)(.*)"
    # tls:
    # - hosts:
    #     - dashboard.example.com
    #   secretName: testsecret-tls
    ## Note: Only one of ingress class annotation or the `ingressClassName:` can be used at a time
    ## to set the ingress class
    # ingressClassName: nginx

cephClusterSpec:
  mon:
    count: 3
    allowMultiplePerNode: false
  mgr:
    count: 2
    allowMultiplePerNode: false
  resources:
    mgr:
      limits:
        memory: "1Gi"
      requests:
        cpu: "500m"
        memory: "512Mi"
    mon:
      limits:
        memory: "2Gi"
      requests:
        cpu: "1000m"
        memory: "1Gi"
    osd:
      limits:
        memory: "4Gi"
      requests:
        cpu: "1000m"
        memory: "4Gi"
  dashboard:
    enabled: true
    ssl: true
    placement:
      all:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: role
                  operator: In
                  values:
                  - storage-node

cephBlockPools:
  - name: ceph-blockpool
    storageClass:
      enabled: true
      name: ceph-block
      allowedTopologies: 
       - matchLabelExpressions:
           - key: rook-ceph-role
             values:
               - storage-node
cephFileSystems:
  - name: ceph-filesystem
    spec:
      metadataServer:
        resources:
          limits:
            memory: "4Gi"
          requests:
            cpu: "1000m"
            memory: "4Gi"
    storageClass:
      enabled: true
      isDefault: false
      name: ceph-filesystem

cephObjectStores:
 - name: ceph-objectstore
   spec:
     metadataPool:
       failureDomain: host
       replicated:
         size: 3
     dataPool:
       failureDomain: host
       erasureCoded:
         dataChunks: 2
         codingChunks: 1
     preservePoolsOnDelete: true
     gateway:
       port: 80
       resources:
         limits:
           memory: "2Gi"
         requests:
           cpu: "1000m"
           memory: "1Gi"
       # securePort: 443
       # sslCertificateRef:
       instances: 1
       priorityClassName: system-cluster-critical
   storageClass:
     enabled: false
     name: ceph-bucket
     reclaimPolicy: Delete
     volumeBindingMode: "Immediate"
     annotations: {}
     labels: {}
     parameters:
       region: us-east-1
   ingress:
     # Enable an ingress for the ceph-objectstore
     enabled: false
     # annotations: {}
     # host:
     #   name: objectstore.example.com
     #   path: /
     # tls:
     # - hosts:
     #     - objectstore.example.com
     #   secretName: ceph-objectstore-tls
     # ingressClassName: nginx
