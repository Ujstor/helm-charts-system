prometheus-grafana:
  defaultRules:
    rules:
      windows: false
  additionalRuleGroupAnnotations:
    disabled: {}
    # KubeAPIDown: true
    # NodeRAIDDegraded: true
  grafana:
    adminPassword: root
    enabled: false
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
      hosts:
        -  grafana.k3s0.ujstor.com
      path: /
      tls:
       - secretName: grafana-tls
         hosts:
           - grafana.k3s0.ujstor.com

    persistence:
      enabled: false
      type: sts
      storageClassName: "storageClassName"
      accessModes:
        - ReadWriteOnce
      size: 20Gi
      finalizers:
        - kubernetes.io/pvc-protection

  # prometheus:
  #   enabled: true
  #   prometheusSpec:
  #     enableRemoteWriteReceiver: true
  #     tsdb:
  #       outOfOrderTimeWindow: 30m
  #   ingress:
  #       enabled: true
  #       ingressClassName: nginx
  #       annotations:
  #         cert-manager.io/cluster-issuer: "letsencrypt"
  #         nginx.ingress.kubernetes.io/ssl-redirect: "false"
  #         nginx.ingress.kubernetes.io/ssl-redirect: "false"
  #         nginx.ingress.kubernetes.io/auth-type: basic
  #         nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth-secret
  #         nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
  #         nginx.ingress.kubernetes.io/proxy-body-size: "0"
  #         nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  #         nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  #       hosts:
  #         - prometheus.k3s0.ujstor.com
  #       tls:
  #         - secretName: prometheus-tls
  #           hosts:
  #             - prometheus.k3s0.ujstor.com

  # Push cluster config; disable grafana
  prometheus:
    prometheusSpec:
      remoteWrite:
        - url: "https://prometheus.k3s0.ujstor.com/api/v1/write"
          tlsConfig:
            insecureSkipVerify: false
          basicAuth:
            username: 
              name: prometheus-remote-write-secret
              key: username
            password:
              name: prometheus-remote-write-secret
              key: password
          queueConfig:
            capacity: 10000
            maxShards: 50
            maxSamplesPerSend: 2000
            batchSendDeadline: "5s"
            minShards: 1
            maxRetries: 10
          writeRelabelConfigs:
            - sourceLabels: ['__name__']
              regex: '.*'
              action: 'keep'
            - targetLabel: cluster
              replacement: k3s1
              action: replace
          remoteTimeout: 30s
      externalLabels:
        cluster: k3s1
        environment: k3s1

  kubernetesServiceMonitors:
    enabled: true
  kubeApiServer:
    enabled: true
    tlsConfig:
      serverName: kubernetes
      insecureSkipVerify: false
  kubelet:
    enabled: true
    namespace: kube-system
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: true
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: true
  kubeProxy:
    enabled: false
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true
    operatingSystems:
      linux:
        enabled: true
      aix:
        enabled: false
      darwin:
        enabled: false

secret-store:
  secretStore:
    clusterWide: false
    provider:
      type: kubernetes
      kubernetes:
        auth:
          serviceAccount:
            create: true
            name: "prometheus-grafana-secret-store-sa"
